from keras.models import Sequential
from keras.layers import Dense
from keras.layers import Convolution2D
from keras.layers import MaxPooling2D
from keras.layers import Flatten
model=Sequential()
model.add(Convolution2D(32,(3,3),input_shape=(64,64,3),activation='relu'))
model.add(MaxPooling2D(pool_size=(2,2)))
model.add(Flatten())
model.add(Dense(units=128,init='uniform',activation='relu'))
model.add(Dense(output_dim=1,activation='sigmoid',init='uniform'))
from keras.preprocessing.image import ImageDataGenerator
train_datagen=ImageDataGenerator(rescale=1./225,shear_range=0.2,zoom_range=0.2,horizontal_flip=True)
test_datagen=ImageDataGenerator(rescale=1./255)
x_train=train_datagen.flow_from_directory(r'C:\Users\TELECOM DIVISION BAM\Desktop\Ansukun Gouda & Ansumun Gouda\dataset\trainset',target_size=(64,64),batch_size=32,class_mode='binary')
x_test=train_datagen.flow_from_directory(r'C:\Users\TELECOM DIVISION BAM\Desktop\Ansukun Gouda & Ansumun Gouda\dataset\testset',target_size=(64,64),batch_size=32,class_mode='binary')
model.compile(loss='binary_crossentropy',optimizer="adam",metrics=["accuracy"])
model.fit_generator(x_train,steps_per_epoch=250,epochs=10,validation_data=x_test,validation_steps=63)
